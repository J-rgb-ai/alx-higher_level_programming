The ``4-print_square`` module
===============================

Using ``print_square``
===============================

Checking docstring for module:
        >>> __import__('4-print_square').__doc__ != None
        True

Using ``print_square``
Import ``print_square`` from the ``4-print_square`` module:
        >>> print_square = __import__('4-print_square').print_square

Check docstring for function:
        >>> len(print_square.__doc__) > 0
        True

Uses:


Checking correcto output:
    >>> print_square(5)
    #####
    #####
    #####
    #####
    #####

Checking a negative integer:
    >>> print_square(-2)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Checking function with a float:
    >>> print_square(3.5)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Checking a negative float:
    >>> print_square(-2.5)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Checking the function without arguments:
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'

Checking the function if the size is 0:
    >>> print_square(0)



Checking function with more than 1 argument:
    >>> print_square(7, 5)
    Traceback (most recent call last):
    ...
    TypeError: print_square() takes 1 positional argument but 2 were given

Checking function with a character:
    >>> print_square("H")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Checking function with a matrix:
    >>> print_square([1])
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Checking function with size as a None:
    >>> print_square(None)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer
